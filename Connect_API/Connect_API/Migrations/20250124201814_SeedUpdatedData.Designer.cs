// <auto-generated />
using System;
using Connect_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Connect_API.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20250124201814_SeedUpdatedData")]
    partial class SeedUpdatedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Connect_API.Models.AspNetGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentTurn")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestName")
                        .HasColumnType("TEXT");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Winner")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AspNetGames");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1553ec4f-ba85-42f6-8886-252f25501bbf"),
                            CreationDate = new DateTime(2025, 1, 24, 20, 18, 14, 932, DateTimeKind.Utc).AddTicks(8470),
                            CurrentTurn = "red",
                            GameCode = "gyxmd4c7m",
                            GuestName = "Maria",
                            HostName = "Younes",
                            ModificationDate = new DateTime(2025, 1, 24, 20, 18, 14, 932, DateTimeKind.Utc).AddTicks(8470),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("04867947-5fbe-4b6b-8f4f-95b0cd92a6aa"),
                            CreationDate = new DateTime(2025, 1, 24, 20, 18, 14, 932, DateTimeKind.Utc).AddTicks(8470),
                            CurrentTurn = "red",
                            GameCode = "bga0dgz47",
                            HostName = "Younes",
                            ModificationDate = new DateTime(2025, 1, 24, 20, 18, 14, 932, DateTimeKind.Utc).AddTicks(8470),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Connect_API.Models.AspNetGameMove", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MoveTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameMoves");
                });

            modelBuilder.Entity("Connect_API.Models.AspNetUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5a9e2504-8873-479b-8e18-366ece6de4f4"),
                            CreationDate = new DateTime(2025, 1, 24, 20, 18, 14, 895, DateTimeKind.Utc).AddTicks(5110),
                            PasswordHash = "AQAAAAIAAYagAAAAECliaLHYRYEDwfO5GDtmg3qmEPAkcWn6vlnBxMHET6h8t4ouK+tn6TdPFkvlS+ZPyA==",
                            Username = "Younes"
                        },
                        new
                        {
                            Id = new Guid("8293b367-034d-4f18-a865-563fa5a61d78"),
                            CreationDate = new DateTime(2025, 1, 24, 20, 18, 14, 932, DateTimeKind.Utc).AddTicks(8320),
                            PasswordHash = "AQAAAAIAAYagAAAAEBqo/3oVisL5QaQ/KPkRF92c5o7z98KNax/skNb4vDqqsI19otIMi2YnjXcw3TG9Tw==",
                            Username = "Maria"
                        });
                });

            modelBuilder.Entity("Connect_API.Models.AspNetGameMove", b =>
                {
                    b.HasOne("Connect_API.Models.AspNetGame", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
